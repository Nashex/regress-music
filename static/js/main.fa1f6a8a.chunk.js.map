{"version":3,"sources":["utils/SpotifyWebApi.js","components/Features.js","components/Track.js","App.js","reportWebVitals.js","index.js"],"names":["request","require","SpotifyWebApi","client_id","client_secret","this","authOptions","url","headers","Buffer","from","toString","form","grant_type","json","Promise","res","rej","post","error","response","body","statusCode","access_token","then","token","tracks","options","join","get","query","Features","props","useState","features","setFeatures","console","log","percentFeatures","useEffect","sx","display","justifyContent","flexWrap","width","py","mx","textAlign","Typography","variant","flex","m","fontWeight","Object","keys","filter","key","includes","map","value","Chip","label","toFixed","margin","color","icon","MusicNote","style","position","top","left","transform","bgcolor","boxShadow","p","borderRadius","Track","track","React","open","setOpen","Card","my","elevation","onClick","Box","CardMedia","component","image","album","images","CardContent","name","artists","Modal","onClose","Paper","maxWidth","alignItems","height","background","IconButton","src","audio_features","spotify","process","App","setTracks","handleChange","event","a","target","getSearchResults","trackRes","items","getAudioAnalysis","o","id","forEach","i","Container","marginTop","TextField","fullWidth","placeholder","onChange","Grid","container","spacing","item","xs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa1f6a8a.chunk.js","sourcesContent":["var request = require('request');\r\n\r\nclass SpotifyWebApi {\r\n  constructor (client_id, client_secret) {\r\n    this.client_id = client_id;\r\n    this.client_secret = client_secret;\r\n    this.authOptions = {\r\n      url: 'https://accounts.spotify.com/api/token',\r\n      headers: {\r\n        'Authorization': 'Basic ' + Buffer.from(this.client_id + ':' + this.client_secret).toString('base64')\r\n      },\r\n      form: {\r\n        grant_type: 'client_credentials'\r\n      },\r\n      json: true\r\n    };\r\n\r\n    new Promise((res, rej) => {\r\n      request.post(this.authOptions, function (error, response, body) {\r\n        if (!error && response.statusCode === 200) {\r\n          res(body.access_token);\r\n        } else {\r\n          rej(error);\r\n        }\r\n      });\r\n    }).then(res => this.token = res);\r\n  }\r\n  \r\n  getAudioAnalysis(tracks) {\r\n    return new Promise((res, rej) => {\r\n      const options = {\r\n        url: `https://api.spotify.com/v1/audio-features?ids=${tracks.join(',')}`,\r\n        headers: {\r\n          'Authorization': 'Bearer ' + this.token\r\n        },\r\n        json: true\r\n      };\r\n      request.get(options, function (error, response, body) {\r\n        res(body);\r\n      });\r\n    });\r\n  }\r\n\r\n  getSearchResults(query) {\r\n    return new Promise((res, rej) => {\r\n      const options = {\r\n        url: `https://api.spotify.com/v1/search?q=${query}&type=track&limit=5`,\r\n        headers: {\r\n          'Authorization': 'Bearer ' + this.token\r\n        },\r\n        json: true\r\n      };\r\n      request.get(options, function (error, response, body) {\r\n        res(body);\r\n      });\r\n    })\r\n  }\r\n}\r\n\r\nexport default SpotifyWebApi;","import { MusicNote } from '@mui/icons-material';\r\nimport { Chip, CircularProgress, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nexport default function Features(props) {\r\n    const [features, setFeatures] = useState(props.features || {})\r\n    console.log(features);\r\n\r\n    const percentFeatures = ['acousticness', 'energy', 'instrumentalness', 'liveness', 'speechiness', 'valence']\r\n    // Features without percentages duration_ms key loudness mode tempo time_signature\r\n    const otherFeatures = ['key', 'loudness', 'mode', 'tempo', 'time_signature']\r\n    useEffect(() => {\r\n        setFeatures(props.features);\r\n        return () => {\r\n            setFeatures({});\r\n        }\r\n    }, [features])\r\n\r\n    if (!features) {\r\n        return <></>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Box sx={{ display: \"flex\", justifyContent: \"space-evenly\", flexWrap: \"wrap\", width: '80%', py: 1, mx: 'auto', textAlign: 'center' }} >\r\n                <Typography variant='h6' sx={{ flex: '0 1 100%', m: 1, fontWeight: 'bold' }}>\r\n                    Calculated Features:\r\n                </Typography>\r\n                {\r\n                    Object.keys(features).filter(key => percentFeatures.includes(key)).map(key => {\r\n                        const value = features[key]\r\n                        return (\r\n                            <Chip label={`${key}: ${(value).toFixed(2)}`} sx={{ margin: .5 }} color=\"primary\" variant=\"outlined\" icon={<MusicNote />} />\r\n\r\n                        )\r\n                    })\r\n                }\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n","import { CardMedia, Card, Paper, CardContent, Typography, Box, Modal, LinearProgress } from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport Features from './Features';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport SkipNextIcon from '@mui/icons-material/SkipNext';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '90%',\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 12,\r\n    p: 4,\r\n    borderRadius: 1,\r\n};\r\n\r\nexport default function Track(props) {\r\n    const { track } = props;\r\n    console.log(track);\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    return (\r\n        <div>\r\n            <Card py={10} my={3} elevation={2} onClick={handleOpen}>\r\n                <Box sx={{ display: 'flex' }}>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        sx={{ width: 151 }}\r\n                        image={track.album.images[0].url}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography component=\"div\" variant=\"h6\">\r\n                            {track.name}\r\n                        </Typography>\r\n                        <Typography component=\"div\" variant=\"subtitle1\">\r\n                            {track.artists[0].name}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Box>\r\n\r\n            </Card>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                <Box sx={style}>\r\n                    <Paper sx={{ display: \"flex\", my: 1, maxWidth: '600px', mx: 'auto' }} elevation={4}>\r\n                        <Box sx={{display: 'flex', alignItems: 'center', justifyContent: 'center', position: 'absolute', width: 151, height: 151, background: 'rgba(0,0,0,.3)'}}>\r\n                            <IconButton aria-label=\"play/pause\" >\r\n                                <PlayArrowIcon sx={{ height: 80, width: 80, color: 'rgba(255,255,255,.9)'}}/>\r\n                            </IconButton>\r\n                        </Box>\r\n                        <Box\r\n                            sx={{ width: 151, borderRadius: 1 }}\r\n                            component=\"img\"\r\n                            src={track.album.images[0].url}\r\n                        />\r\n                        <Box sx={{ margin: 1 }}>\r\n                            <Typography component=\"div\" variant=\"h6\" sx={{fontWeight: 'bold'}}>\r\n                                {track.name}\r\n                            </Typography>\r\n                            <Typography component=\"div\" variant=\"subtitle1\">\r\n                                {track.artists[0].name}\r\n                            </Typography>\r\n                            \r\n                        </Box>\r\n                    </Paper>\r\n                    <Features features={track.audio_features} />\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\nimport { Grid, Container, TextField, Toolbar, Typography, AppBar, Paper } from '@mui/material';\nimport SpotifyWebApi from './utils/SpotifyWebApi';\nimport Track from './components/Track';\nimport './App.css'\nimport { Box } from '@mui/system';\n\n\nconst spotify = new SpotifyWebApi(process.env.REACT_APP_CLIENT_ID, process.env.REACT_APP_CLIENT_SECRET);\n\nfunction App() {\n  const [tracks, setTracks] = useState([]);\n\n  const handleChange = async (event) => {\n    const { value } = event.target\n    if (value) {\n      spotify.getSearchResults(value).then((res) => {\n        const trackRes = res.tracks.items\n        spotify.getAudioAnalysis(res.tracks.items.map(o => o.id)).then((res) => {\n          res.audio_features.forEach((o, i) => trackRes[i].audio_features = o);\n        }).then(() => {\n          setTracks(trackRes);\n        });\n\n      })\n    } else {\n      setTracks([]);\n    }\n  }\n\n  return (\n    <>\n      <Container >\n        <Box sx={{ marginTop: 2 }} elevation={5}>\n          <Typography variant=\"h5\" sx={{fontWeight: 'bold'}}>\n            Regress It | Music\n          </Typography>\n          <Paper sx={{my:1}} elevation={2}>\n            <TextField\n              fullWidth margin=\"none\"\n              placeholder=\"Search Spotify Songs\"\n              onChange={handleChange}\n            />\n          </Paper>\n        </Box>\n        <Grid container spacing={2}>\n          <Grid item xs={12} key={0}>\n\n          </Grid>\n          {tracks ? tracks.map((o, i) => {\n            return (\n              <Grid item xs={12} key={o.id}>\n                <Track track={o} />\n              </Grid>\n            )\n          }) : <></>}\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}